{"type":"editor-only","openFiles":["src/main.ts"],"allFiles":["BUILD.bazel","angular.json","package-lock.json","package.json.template","tsconfig.app.json","tsconfig.json","src/favicon.ico","src/index.html","src/main.ts","src/styles.css","src/app/app.config.ts","src/assets/angular.svg","package.json","idx/dev.nix","config.json"],"tutorialFiles":{"src/main.ts":"import {Component, signal, computed} from '@angular/core';\nimport {bootstrapApplication} from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-root',\n  template: `\n    <h2>Cookie recipe</h2>\n\n    <label>\n      # of cookies:\n      <input type=\"range\" min=\"10\" max=\"100\" step=\"10\" [value]=\"count()\" (input)=\"update($event)\" />\n      {{ count() }}\n    </label>\n\n    <p>Butter: {{ butter() }} cup(s)</p>\n    <p>Sugar: {{ sugar() }} cup(s)</p>\n    <p>Flour: {{ flour() }} cup(s)</p>\n  `,\n})\nexport class CookieRecipe {\n  count = signal(10);\n\n  butter = computed(() => this.count() * 0.1);\n  sugar = computed(() => this.count() * 0.05);\n  flour = computed(() => this.count() * 0.2);\n\n  update(event: Event) {\n    const input = event.target as HTMLInputElement;\n    this.count.set(parseInt(input.value));\n  }\n}\n\nbootstrapApplication(CookieRecipe);\n"},"answerFiles":{},"hiddenFiles":["BUILD.bazel","angular.json","package-lock.json","package.json.template","tsconfig.app.json","tsconfig.json","src/favicon.ico","src/index.html","src/styles.css","src/app/app.config.ts","src/assets/angular.svg","package.json","idx/dev.nix","config.json"],"dependencies":{"@angular/animations":"^19.0.0","@angular/cdk":"^19.0.0","@angular/common":"^19.0.0","@angular/compiler":"^19.0.0","@angular/core":"^19.0.0","@angular/forms":"^19.0.0","@angular/material":"^19.0.0","@angular/platform-browser":"^19.0.0","rxjs":"~7.8.0","tslib":"^2.3.0","zone.js":"~0.15.0","@angular/build":"^19.0.0","@angular/cli":"^19.0.0","@angular/compiler-cli":"^19.0.0","typescript":"~5.8.0"}}
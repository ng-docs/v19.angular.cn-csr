{"type":"editor-only","openFiles":["src/main.ts","src/game.html","src/game.css"],"allFiles":["BUILD.bazel","angular.json","package-lock.json","package.json.template","tsconfig.app.json","tsconfig.json","src/favicon.ico","src/index.html","src/main.ts","src/styles.css","src/app/app.config.ts","src/assets/angular.svg","package.json","idx/dev.nix","config.json","src/game.css","src/game.html","src/assets/share.svg"],"tutorialFiles":{"src/main.ts":"import {A11yModule} from '@angular/cdk/a11y';\nimport {CommonModule} from '@angular/common';\nimport {Component, ElementRef, ViewChild, computed, signal} from '@angular/core';\nimport {MatSlideToggleChange, MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {bootstrapApplication} from '@angular/platform-browser';\n\nconst RESULT_QUOTES = [\n  [\n    'Not quite right!',\n    'You missed the mark!',\n    'Have you seen an angle before?',\n    'Your measurements are all over the place!',\n    'Your precision needs work!',\n  ],\n  ['Not too shabby.', 'Getting sharper, keep it up!', 'Not perfect, but getting better!'],\n  [\n    'Your angles are on point!',\n    'Your precision is unparalleled!',\n    'Your geometric skills are divine!',\n    \"Amazing! You're acute-y!\",\n    'Wow! So precise!',\n  ],\n];\n\nconst CHANGING_QUOTES = [\n  [\"I'm such a-cute-y!\", \"I'm a tiny slice of pi!\", \"You're doing great!\"],\n  [\"I'm wide open!\", 'Keep going!', 'Wow!', 'Wheee!!'],\n  [\"I'm so obtuse!\", 'The bigger the better!', \"Life's too short for right angles!\", 'Whoa!'],\n];\n\nfunction getChangingQuote(rotateValue: number): string {\n  let possibleQuotes = CHANGING_QUOTES[1];\n  if (rotateValue < 110) {\n    possibleQuotes = CHANGING_QUOTES[0];\n  } else if (rotateValue >= 230) {\n    possibleQuotes = CHANGING_QUOTES[2];\n  }\n  const randomQuoteIndex = Math.floor(Math.random() * possibleQuotes.length);\n  return possibleQuotes[randomQuoteIndex];\n}\n\nfunction getResultQuote(accuracy: number) {\n  let possibleQuotes = RESULT_QUOTES[1];\n  if (accuracy < 50) {\n    possibleQuotes = RESULT_QUOTES[0];\n  } else if (accuracy >= 85) {\n    possibleQuotes = RESULT_QUOTES[2];\n  }\n  let randomQuoteIndex = Math.floor(Math.random() * possibleQuotes.length);\n  return possibleQuotes[randomQuoteIndex];\n}\n\n@Component({\n  selector: 'app-root',\n  imports: [CommonModule, MatSlideToggleModule, A11yModule],\n  styleUrl: 'game.css',\n  templateUrl: 'game.html',\n})\nexport class PlaygroundComponent {\n  protected readonly isGuessModalOpen = signal(false);\n  protected readonly isAccessiblePanelOpen = signal(false);\n  protected readonly rotateVal = signal(40);\n  protected readonly goal = signal(85);\n  protected readonly animatedAccuracy = signal(0);\n  protected readonly gameStats = signal({\n    level: 0,\n    totalAccuracy: 0,\n  });\n  protected readonly resultQuote = signal('');\n\n  private isDragging = false;\n  private currentInteractions: {lastChangedAt: number; face: number; quote: string} = {\n    lastChangedAt: 75,\n    face: 0,\n    quote: \"Hi, I'm NG the Angle!\",\n  };\n\n  @ViewChild('staticArrow') staticArrow!: ElementRef;\n\n  protected readonly totalAccuracyPercentage = computed(() => {\n    const {level, totalAccuracy} = this.gameStats();\n    if (level === 0) {\n      return 0;\n    }\n    return totalAccuracy / level;\n  });\n\n  protected readonly updatedInteractions = computed(() => {\n    if (\n      this.rotateVal() > 75 &&\n      Math.abs(this.rotateVal() - this.currentInteractions.lastChangedAt) > 70 &&\n      Math.random() > 0.5\n    ) {\n      this.currentInteractions = {\n        lastChangedAt: this.rotateVal(),\n        face: Math.floor(Math.random() * 6),\n        quote: getChangingQuote(this.rotateVal()),\n      };\n    }\n    return this.currentInteractions;\n  });\n\n  constructor() {\n    this.resetGame();\n  }\n\n  resetGame() {\n    this.goal.set(Math.floor(Math.random() * 360));\n    this.rotateVal.set(40);\n  }\n\n  getRotation() {\n    return `rotate(${this.rotateVal()}deg)`;\n  }\n\n  getIndicatorStyle() {\n    return 0.487 * this.rotateVal() - 179.5;\n  }\n\n  getIndicatorRotation() {\n    return `rotate(${253 + this.rotateVal()}deg)`;\n  }\n\n  mouseDown() {\n    this.isDragging = true;\n  }\n\n  stopDragging() {\n    this.isDragging = false;\n  }\n\n  mouseMove(e: MouseEvent) {\n    const vh30 = 0.3 * document.documentElement.clientHeight;\n    if (!this.isDragging) return;\n\n    let pointX = e.pageX - (this.staticArrow.nativeElement.offsetLeft + 2.5);\n    let pointY = e.pageY - (this.staticArrow.nativeElement.offsetTop + vh30);\n\n    let calculatedAngle = 0;\n    if (pointX >= 0 && pointY < 0) {\n      calculatedAngle = 90 - (Math.atan2(Math.abs(pointY), pointX) * 180) / Math.PI;\n    } else if (pointX >= 0 && pointY >= 0) {\n      calculatedAngle = 90 + (Math.atan2(pointY, pointX) * 180) / Math.PI;\n    } else if (pointX < 0 && pointY >= 0) {\n      calculatedAngle = 270 - (Math.atan2(pointY, Math.abs(pointX)) * 180) / Math.PI;\n    } else {\n      calculatedAngle = 270 + (Math.atan2(Math.abs(pointY), Math.abs(pointX)) * 180) / Math.PI;\n    }\n\n    this.rotateVal.set(calculatedAngle);\n  }\n\n  adjustAngle(degreeChange: number) {\n    this.rotateVal.update((x) =>\n      x + degreeChange < 0 ? 360 + (x + degreeChange) : (x + degreeChange) % 360,\n    );\n  }\n\n  touchMove(e: Event) {\n    let firstTouch = (e as TouchEvent).touches[0];\n    if (firstTouch) {\n      this.mouseMove({pageX: firstTouch.pageX, pageY: firstTouch.pageY} as MouseEvent);\n    }\n  }\n\n  guess() {\n    this.isGuessModalOpen.set(true);\n    const calcAcc = Math.abs(100 - (Math.abs(this.goal() - this.rotateVal()) / 180) * 100);\n    this.resultQuote.set(getResultQuote(calcAcc));\n    this.animatedAccuracy.set(calcAcc > 20 ? calcAcc - 20 : 0);\n    this.powerUpAccuracy(calcAcc);\n    this.gameStats.update(({level, totalAccuracy}) => ({\n      level: level + 1,\n      totalAccuracy: totalAccuracy + calcAcc,\n    }));\n  }\n\n  powerUpAccuracy(finalAcc: number) {\n    if (this.animatedAccuracy() >= finalAcc) return;\n\n    let difference = finalAcc - this.animatedAccuracy();\n    if (difference > 20) {\n      this.animatedAccuracy.update((x) => x + 10.52);\n      setTimeout(() => this.powerUpAccuracy(finalAcc), 30);\n    } else if (difference > 4) {\n      this.animatedAccuracy.update((x) => x + 3.31);\n      setTimeout(() => this.powerUpAccuracy(finalAcc), 40);\n    } else if (difference > 0.5) {\n      this.animatedAccuracy.update((x) => x + 0.49);\n      setTimeout(() => this.powerUpAccuracy(finalAcc), 50);\n    } else if (difference >= 0.1) {\n      this.animatedAccuracy.update((x) => x + 0.1);\n      setTimeout(() => this.powerUpAccuracy(finalAcc), 100);\n    } else {\n      this.animatedAccuracy.update((x) => x + 0.01);\n      setTimeout(() => this.powerUpAccuracy(finalAcc), 100);\n    }\n  }\n\n  close() {\n    this.isGuessModalOpen.set(false);\n    this.resetGame();\n  }\n\n  getText() {\n    const roundedAcc = Math.floor(this.totalAccuracyPercentage() * 10) / 10;\n    let emojiAccuracy = '';\n    for (let i = 0; i < 5; i++) {\n      emojiAccuracy += roundedAcc >= 20 * (i + 1) ? 'üü©' : '‚¨úÔ∏è';\n    }\n    return encodeURIComponent(\n      `üìê ${emojiAccuracy} \\n My angles are ${roundedAcc}% accurate on level ${\n        this.gameStats().level\n      }. \\n\\nHow @Angular are you? \\nhttps://angular.dev/playground`,\n    );\n  }\n\n  toggleA11yControls(event: MatSlideToggleChange) {\n    this.isAccessiblePanelOpen.set(event.checked);\n  }\n}\n\nbootstrapApplication(PlaygroundComponent);\n","src/game.html":"<div class=\"wrapper\">\r\n  <div class=\"col\">\r\n    <h1>Goal: {{ goal() }}¬∫</h1>\r\n    <div id=\"quote\" [class.show]=\"rotateVal() >= 74\">\"{{ updatedInteractions().quote }}\"</div>\r\n    <div\r\n      id=\"angle\"\r\n      (mouseup)=\"stopDragging()\"\r\n      (mouseleave)=\"stopDragging()\"\r\n      (mousemove)=\"mouseMove($event)\"\r\n      (touchmove)=\"touchMove($event)\"\r\n      (touchend)=\"stopDragging()\"\r\n      (touchcanceled)=\"stopDragging()\"\r\n    >\r\n      <div class=\"arrow\" id=\"static\" #staticArrow>\r\n        <div class=\"center\"></div>\r\n        @if(rotateVal() >= 20) {\r\n        <div class=\"svg\" [style.transform]=\"getIndicatorRotation()\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 75 75\">\r\n            <defs>\r\n              <linearGradient id=\"gradient\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\r\n                <stop offset=\"0%\" stop-color=\"var(--orange-red)\" />\r\n                <stop offset=\"50%\" stop-color=\"var(--vivid-pink)\" />\r\n                <stop offset=\"100%\" stop-color=\"var(--electric-violet)\" />\r\n              </linearGradient>\r\n            </defs>\r\n            <path\r\n              [style.stroke-dashoffset]=\"getIndicatorStyle()\"\r\n              class=\"svg-arrow\"\r\n              stroke=\"url(#gradient)\"\r\n              d=\"m64.37,45.4c-3.41,11.62-14.15,20.1-26.87,20.1-15.46,0-28-12.54-28-28s12.54-28,28-28,28,12.54,28,28\"\r\n            />\r\n            <polyline\r\n              class=\"svg-arrow\"\r\n              stroke=\"url(#gradient)\"\r\n              points=\"69.63 36.05 65.29 40.39 60.96 36.05\"\r\n            />\r\n          </svg>\r\n        </div>\r\n        }\r\n      <div class=\"face\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 103.41 84.33\" [class.show]=\"rotateVal() >= 74\">\r\n          @switch(updatedInteractions().face) {\r\n          @case(0) {\r\n            <g>\r\n              <path class=\"c\" d=\"m65.65,55.83v11c0,7.73-6.27,14-14,14h0c-7.73,0-14-6.27-14-14v-11\"/>\r\n              <line class=\"c\" x1=\"51.52\" y1=\"65.83\" x2=\"51.65\" y2=\"57.06\"/>\r\n              <path class=\"c\" d=\"m19.8,44.06c7.26,7.89,18.83,13,31.85,13s24.59-5.11,31.85-13\"/>\r\n              <path class=\"b\" d=\"m3,14.33c3.35-5.71,9.55-9.54,16.65-9.54,6.66,0,12.53,3.37,16,8.5\"/>\r\n              <path class=\"b\" d=\"m100.3,14.33c-3.35-5.71-9.55-9.54-16.65-9.54-6.66,0-12.53,3.37-16,8.5\"/>\r\n            </g>\r\n          }\r\n          @case(1) {\r\n            <g>\r\n              <path class=\"d\" d=\"m22.11,48.83c-.08.65-.14,1.3-.14,1.97,0,11.94,13.37,21.62,29.87,21.62s29.87-9.68,29.87-21.62c0-.66-.06-1.32-.14-1.97H22.11Z\"/>\r\n              <circle cx=\"19.26\" cy=\"12.56\" r=\"12.37\"/>\r\n              <circle cx=\"84.25\" cy=\"12.56\" r=\"12.37\"/>\r\n              <circle class=\"e\" cx=\"14.86\" cy=\"8.94\" r=\"4.24\"/>\r\n              <circle class=\"e\" cx=\"80.29\" cy=\"8.76\" r=\"4.24\"/>\r\n            </g>\r\n          }\r\n          @case(2) {\r\n            <g>\r\n              <circle cx=\"19.2\" cy=\"12.72\" r=\"12.37\"/>\r\n              <circle cx=\"84.19\" cy=\"12.72\" r=\"12.37\"/>\r\n              <circle class=\"e\" cx=\"14.8\" cy=\"9.09\" r=\"4.24\"/>\r\n              <circle class=\"e\" cx=\"80.22\" cy=\"8.92\" r=\"4.24\"/>\r\n              <path class=\"c\" d=\"m19.45,44.33c7.26,7.89,18.83,13,31.85,13s24.59-5.11,31.85-13\"/>\r\n            </g>\r\n          }\r\n          @case(3) {\r\n            <g>\r\n              <path class=\"b\" d=\"m3.11,14.33c3.35-5.71,9.55-9.54,16.65-9.54,6.66,0,12.53,3.37,16,8.5\"/>\r\n              <path class=\"b\" d=\"m100.41,14.33c-3.35-5.71-9.55-9.54-16.65-9.54-6.66,0-12.53,3.37-16,8.5\"/>\r\n              <path class=\"c\" d=\"m19.91,44.06c7.26,7.89,18.83,13,31.85,13s24.59-5.11,31.85-13\"/>\r\n            </g>\r\n          }\r\n          @case(4) {\r\n            <g>\r\n              <circle cx=\"19.26\" cy=\"12.5\" r=\"12.37\"/>\r\n              <circle class=\"e\" cx=\"14.86\" cy=\"8.88\" r=\"4.24\"/>\r\n              <path class=\"c\" d=\"m19.51,44.11c7.26,7.89,18.83,13,31.85,13s24.59-5.11,31.85-13\"/>\r\n              <path class=\"b\" d=\"m100.08,14.33c-3.35-5.71-9.55-9.54-16.65-9.54-6.66,0-12.53,3.37-16,8.5\"/>\r\n            </g>\r\n          }\r\n          @default {\r\n            <g>\r\n              <circle cx=\"19.14\" cy=\"12.44\" r=\"12.37\"/>\r\n              <circle cx=\"84.13\" cy=\"12.44\" r=\"12.37\"/>\r\n              <circle class=\"e\" cx=\"14.74\" cy=\"8.82\" r=\"4.24\"/>\r\n              <circle class=\"e\" cx=\"80.17\" cy=\"8.64\" r=\"4.24\"/>\r\n              <circle class=\"b\" cx=\"52.02\" cy=\"53.33\" r=\"14\"/>\r\n            </g>\r\n          }\r\n        }\r\n        </svg>\r\n      </div>\r\n    </div>\r\n      <div\r\n        class=\"grabbable\"\r\n        [style.transform]=\"getRotation()\"\r\n        (mousedown)=\"mouseDown()\"\r\n        (touchstart)=\"mouseDown()\"\r\n      >\r\n        <div class=\"arrow\" id=\"moving\"></div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"col\">\r\n    <div class=\"overall-stats\">\r\n      <h4>level: {{ gameStats().level + 1 }}</h4>\r\n      <h4>\r\n        accuracy: {{ totalAccuracyPercentage() > 0 ? (totalAccuracyPercentage() | number : '1.1-1') + '%' : '??' }}\r\n      </h4>\r\n      <button id=\"guess\" class=\"gradient-button\" (click)=\"guess()\" [disabled]=\"isGuessModalOpen()\"><span></span><span>guess</span></button>\r\n    </div>\r\n  </div>\r\n  @if(isGuessModalOpen()) {\r\n    <dialog id=\"result\" cdkTrapFocus>\r\n      <button id=\"close\" (click)=\"close()\">X</button>\r\n      <div class=\"result-stats\">\r\n        <h2>goal: {{ goal() }}¬∫</h2>\r\n        <h2>actual: {{ rotateVal() | number : '1.1-1' }}¬∫</h2>\r\n      </div>\r\n      <h2 class=\"accuracy\">\r\n        <span>{{ animatedAccuracy() | number : '1.1-1' }}%</span>\r\n        accurate\r\n      </h2>\r\n      <svg class=\"personified\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 119.07 114.91\">\r\n        <g>\r\n          <polyline class=\"i\" points=\"1.5 103.62 56.44 1.5 40.73 8.68\"/>\r\n          <line class=\"i\" x1=\"59.1\" y1=\"18.56\" x2=\"56.44\" y2=\"1.5\"/>\r\n          <polyline class=\"i\" points=\"1.61 103.6 117.57 102.9 103.74 92.56\"/>\r\n          <line class=\"i\" x1=\"103.86\" y1=\"113.41\" x2=\"117.57\" y2=\"102.9\"/>\r\n          <path class=\"i\" d=\"m12.97,84.22c6.4,4.04,10.47,11.28,10.2,19.25\"/>\r\n        </g>\r\n        @if(animatedAccuracy() > 95) {\r\n          <g>\r\n            <path class=\"i\" d=\"m52.68,72.99c-.04.35-.07.71-.07,1.07,0,6.5,7.28,11.77,16.26,11.77s16.26-5.27,16.26-11.77c0-.36-.03-.72-.07-1.07h-32.37Z\"/>\r\n            <circle cx=\"51.13\" cy=\"53.25\" r=\"6.73\"/>\r\n            <circle cx=\"86.5\" cy=\"53.25\" r=\"6.73\"/>\r\n            <circle class=\"g\" cx=\"48.73\" cy=\"51.28\" r=\"2.31\"/>\r\n            <circle class=\"g\" cx=\"84.35\" cy=\"51.18\" r=\"2.31\"/>\r\n          </g>\r\n        } @else if (animatedAccuracy() > 80) {\r\n          <g>\r\n            <path class=\"h\" d=\"m52.59,70.26c3.95,4.3,10.25,7.08,17.34,7.08s13.38-2.78,17.34-7.08\"/>\r\n            <path class=\"h\" d=\"m43.44,54.08c1.82-3.11,5.2-5.19,9.06-5.19,3.62,0,6.82,1.84,8.71,4.63\"/>\r\n            <path class=\"h\" d=\"m96.41,54.08c-1.82-3.11-5.2-5.19-9.06-5.19-3.62,0-6.82,1.84-8.71,4.63\"/>\r\n          </g>\r\n        } @else if (animatedAccuracy() > 60) {\r\n          <g>\r\n            <path class=\"h\" d=\"m77.38,76.81v5.99c0,4.21-3.41,7.62-7.62,7.62h0c-4.21,0-7.62-3.41-7.62-7.62v-5.99\"/>\r\n            <line class=\"h\" x1=\"69.69\" y1=\"82.25\" x2=\"69.76\" y2=\"77.47\"/>\r\n            <path class=\"h\" d=\"m52.42,70.4c3.95,4.3,10.25,7.08,17.34,7.08s13.38-2.78,17.34-7.08\"/>\r\n            <path class=\"h\" d=\"m43.28,54.21c1.82-3.11,5.2-5.19,9.06-5.19,3.62,0,6.82,1.84,8.71,4.63\"/>\r\n            <path class=\"h\" d=\"m96.24,54.21c-1.82-3.11-5.2-5.19-9.06-5.19-3.62,0-6.82,1.84-8.71,4.63\"/>\r\n          </g>\r\n        } @else if (animatedAccuracy() > 40) {\r\n          <g>\r\n            <circle cx=\"51.55\" cy=\"53.15\" r=\"6.73\"/>\r\n            <circle cx=\"86.92\" cy=\"53.15\" r=\"6.73\"/>\r\n            <circle class=\"g\" cx=\"49.15\" cy=\"51.17\" r=\"2.31\"/>\r\n            <circle class=\"g\" cx=\"84.77\" cy=\"51.08\" r=\"2.31\"/>\r\n            <line class=\"h\" x1=\"61.21\" y1=\"76.81\" x2=\"78.15\" y2=\"76.81\"/>\r\n          </g>\r\n        } @else {\r\n          <g>\r\n            <circle cx=\"51.55\" cy=\"53.12\" r=\"6.73\"/>\r\n            <circle cx=\"86.92\" cy=\"53.12\" r=\"6.73\"/>\r\n            <circle class=\"g\" cx=\"49.15\" cy=\"51.14\" r=\"2.31\"/>\r\n            <circle class=\"g\" cx=\"84.77\" cy=\"51.05\" r=\"2.31\"/>\r\n            <path class=\"h\" d=\"m84.01,81.41c-2.37-5.86-8.11-10-14.83-10s-12.45,4.14-14.83,10\"/>\r\n          </g>\r\n        }\r\n      </svg>\r\n      <div>\"{{ resultQuote() }}\"</div>\r\n      <div class=\"result-buttons\">\r\n        <button (click)=\"close()\" class=\"gradient-button\"><span></span><span>again?</span></button>\r\n        <a target=\"_blank\" class=\"gradient-button\" [href]=\"'https://twitter.com/intent/tweet?text=' + getText()\"><span></span><span>share<img src=\"assets/share.svg\" aria-hidden=\"true\"></span></a>\r\n      </div>\r\n    </dialog>\r\n  }\r\n  <div class=\"accessibility\">\r\n    @if(isAccessiblePanelOpen()) {\r\n    <div>\r\n      <button [disabled]=\"isGuessModalOpen()\" (click)=\"adjustAngle(-25)\" aria-label=\"decrease angle a lot\">--</button>\r\n      <button [disabled]=\"isGuessModalOpen()\" (click)=\"adjustAngle(-5)\" aria-label=\"decrease angle a little\">-</button>\r\n      <button [disabled]=\"isGuessModalOpen()\" (click)=\"adjustAngle(5)\" aria-label=\"increase angle a little\">+</button>\r\n      <button [disabled]=\"isGuessModalOpen()\" (click)=\"adjustAngle(25)\" aria-label=\"increase angle a lot\">++</button>\r\n    </div>\r\n    }\r\n    <mat-slide-toggle [disabled]=\"isGuessModalOpen()\" id=\"toggle\" color=\"primary\" (change)=\"toggleA11yControls($event)\">Show Accessible Controls</mat-slide-toggle>\r\n  </div>\r\n</div>\r\n","src/game.css":".wrapper {\r\n  height: 100%;\r\n  width: 100%;\r\n  max-width: 1000px;\r\n  margin: auto;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n}\r\n\r\n.col {\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.overall-stats {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 1rem;\r\n  font-size: 1.3rem;\r\n  user-select: none;\r\n}\r\n\r\n#goal {\r\n  font-size: 2rem;\r\n}\r\n\r\n#quote {\r\n  margin-top: 10px;\r\n  opacity: 0;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n#quote.show {\r\n  opacity: 1;\r\n}\r\n\r\n.gradient-button {\r\n  text-decoration: none;\r\n  color: black;\r\n  margin: 8px;\r\n  position: relative;\r\n  cursor: pointer;\r\n  font-size: 1rem;\r\n  border: none;\r\n  font-weight: 600;\r\n  width: fit-content;\r\n  height: fit-content;\r\n  padding-block: 0;\r\n  padding-inline: 0;\r\n}\r\n\r\n.gradient-button span:nth-of-type(1) {\r\n  position: absolute;\r\n  border-radius: 0.25rem;\r\n  height: 100%;\r\n  width: 100%;\r\n  left: 0;\r\n  top: 0;\r\n  background: linear-gradient(90deg, var(--orange-red) 0%, var(--vivid-pink) 50%, var(--electric-violet) 100%);\r\n}\r\n\r\n.gradient-button span:nth-of-type(2) {\r\n  position: relative;\r\n  padding: 0.75rem 1rem;\r\n  background: white;\r\n  margin: 1px;\r\n  border-radius: 0.2rem;\r\n  transition: all .3s ease;\r\n  opacity: 1;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.gradient-button:enabled:hover span:nth-of-type(2), \r\n.gradient-button:enabled:focus span:nth-of-type(2) {\r\n  opacity: 0.9;\r\n}\r\n\r\na.gradient-button:hover span:nth-of-type(2), \r\na.gradient-button:focus span:nth-of-type(2) {\r\n  opacity: 0.9;\r\n}\r\n\r\n.gradient-button:disabled {\r\n  cursor: not-allowed;\r\n  color: #969696;\r\n}\r\n\r\n.gradient-button img {\r\n  display: inline;\r\n  height: 0.8rem;\r\n  margin-left: 4px;\r\n}\r\n\r\n#angle {\r\n  height: 60vh;\r\n  width: 60vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  padding: 10px;\r\n  margin: 10px;\r\n}\r\n\r\n.grabbable {\r\n  height: 30vh;\r\n  width: 25px;\r\n  position: absolute;\r\n  cursor: pointer;\r\n  transform-origin: bottom center;\r\n}\r\n\r\n.arrow {\r\n  height: 30vh;\r\n  width: 4px;\r\n  background-color: black;\r\n  position: absolute;\r\n}\r\n\r\n.arrow::before,\r\n.arrow::after {\r\n  content: '';\r\n  position: absolute;\r\n  top: -4px;\r\n  left: -6px;\r\n  height: 20px;\r\n  transform: rotate(45deg);\r\n  width: 4px;\r\n  background-color: black;\r\n  border-radius: 0px 0px 5px 5px;\r\n}\r\n\r\n.arrow::after {\r\n  left: 6px;\r\n  transform: rotate(-45deg);\r\n}\r\n\r\n#static > div.center {\r\n  height: 4px;\r\n  width: 4px;\r\n  background-color: black;\r\n  position: absolute;\r\n  bottom: -2px;\r\n  border-radius: 100%;\r\n}\r\n\r\n#static > div.svg {\r\n  height: 75px;\r\n  width: 75px;\r\n  position: absolute;\r\n  bottom: -37.5px;\r\n  left: -35.5px;\r\n  transform-origin: center;\r\n  transform: rotate(294deg);\r\n}\r\n\r\n#static svg .svg-arrow {\r\n  fill: none;\r\n  stroke-linecap: round;\r\n  stroke-miterlimit: 10;\r\n  stroke-width: 3px;\r\n}\r\n\r\n#static svg path {\r\n  stroke-dasharray: 180;\r\n}\r\n\r\n#moving {\r\n  transform-origin: bottom center;\r\n  left: calc(50% - 2px);\r\n}\r\n\r\n.face svg {\r\n  position: absolute;\r\n  height: 13vh;\r\n  width: 13vh;\r\n  bottom: 2vh;\r\n  left: 4vh;\r\n  opacity: 0;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.face svg.show {\r\n  opacity: 1;\r\n}\r\n\r\n.face svg .b {\r\n  stroke-width: 6px;\r\n}\r\n\r\n.face svg .b, .c {\r\n  stroke-miterlimit: 10;\r\n}\r\n\r\n.face svg .b, .c, .d {\r\n  fill: none;\r\n  stroke: #000;\r\n  stroke-linecap: round;\r\n}\r\n\r\n.face svg .e {\r\n  fill: #fff;\r\n}\r\n\r\n.face svg .c, .d {\r\n  stroke-width: 7px;\r\n}\r\n\r\n.face svg .d {\r\n  stroke-linejoin: round;\r\n}\r\n\r\n#result {\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  border: 1px solid #f6f6f6;\r\n  box-shadow: 0 3px 14px 0 rgba(0,0,0,.2);\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  width: 50%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  padding: 2rem;\r\n  z-index: 10;\r\n}\r\n\r\nsvg.personified  {\r\n  height: 125px;\r\n}\r\n\r\n.personified .g {\r\n  fill: #fff;\r\n}\r\n\r\n.personified .h {\r\n  stroke-miterlimit: 10;\r\n  stroke-width: 4px;\r\n}\r\n\r\n.personified .h, .personified .i {\r\n  fill: none;\r\n  stroke: #000;\r\n  stroke-linecap: round;\r\n}\r\n\r\n.personified .i {\r\n  stroke-linejoin: round;\r\n  stroke-width: 3px;\r\n} \r\n\r\n#close {\r\n  border: none;\r\n  background: none;\r\n  position: absolute;\r\n  top: 8px;\r\n  right: 8px;\r\n  font-size: 19px;\r\n  cursor: pointer;\r\n}\r\n\r\n.result-stats,\r\n.result-buttons {\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: center;\r\n}\r\n\r\n.result-stats > * {\r\n  margin: 4px 16px;\r\n}\r\n\r\n.result-buttons {\r\n  margin-top: 16px;\r\n}\r\n\r\n.accuracy {\r\n  font-weight: 700;\r\n  margin: 1rem;\r\n}\r\n\r\n.accuracy span {\r\n  font-size: 4rem;\r\n  margin-right: 6px;\r\n}\r\n\r\n#copy {\r\n  display: none;\r\n}\r\n\r\n.accessibility {\r\n  position: fixed;\r\n  left: 10px;\r\n  bottom: 10px;\r\n}\r\n\r\n#toggle {\r\n  margin-top: 8px;\r\n}\r\n\r\n.accessibility button {\r\n  width: 2rem;\r\n  height: 2rem;\r\n  font-size: 1rem;\r\n  border: 2px solid var(--electric-violet);\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  margin: 0 4px;\r\n  background-color: #fff;\r\n  transition: all 0.3s ease;\r\n  box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.3607843137);\r\n}\r\n\r\n.accessibility button:focus:enabled, .accessibility button:hover:enabled {\r\n  background-color: #e8dbf4;\r\n}\r\n\r\n.accessibility button:disabled {\r\n  cursor: not-allowed;\r\n  background-color: #eee;\r\n}\r\n\r\n@media screen and (max-width: 650px) {\r\n  .wrapper {\r\n    flex-direction: column-reverse;\r\n    align-items: center;\r\n  }\r\n\r\n  .overall-stats {\r\n    align-items: center;\r\n    margin-bottom: 16px;\r\n  }\r\n\r\n  #result {\r\n    box-sizing: border-box;\r\n    min-width: auto;\r\n    height: 100%;\r\n    width: 100%;\r\n    padding: 20px;\r\n    top: 0;\r\n    left: 0;\r\n    border-radius: 0;\r\n    transform: none;\r\n  }\r\n}\r\n"},"answerFiles":{},"hiddenFiles":["BUILD.bazel","angular.json","package-lock.json","package.json.template","tsconfig.app.json","tsconfig.json","src/favicon.ico","src/index.html","src/styles.css","src/app/app.config.ts","src/assets/angular.svg","package.json","idx/dev.nix","config.json","src/assets/share.svg"],"dependencies":{"@angular/animations":"^19.0.0","@angular/cdk":"^19.0.0","@angular/common":"^19.0.0","@angular/compiler":"^19.0.0","@angular/core":"^19.0.0","@angular/forms":"^19.0.0","@angular/material":"^19.0.0","@angular/platform-browser":"^19.0.0","rxjs":"~7.8.0","tslib":"^2.3.0","zone.js":"~0.15.0","@angular/build":"^19.0.0","@angular/cli":"^19.0.0","@angular/compiler-cli":"^19.0.0","typescript":"~5.8.0"}}